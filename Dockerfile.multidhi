# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

ARG NODE_VERSION=24.2.0
ARG DIST_VERSION=alpine3.21

# FROM node:${NODE_VERSION}-alpine
FROM demonstrationorg/dhi-node:${NODE_VERSION}-${DIST_VERSION}-dev as dev

# Use production node environment by default.
ENV NODE_ENV production


WORKDIR /usr/src/app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev

# Runtime DHI images already configured to run as non-root user, so we can comment / remove the following:
# USER node

# Copy the rest of the source files into the image.
COPY . .

# PROD STAGE
FROM demonstrationorg/dhi-node:${NODE_VERSION}-${DIST_VERSION} as prod

ENV NODE_ENV=production
WORKDIR /usr/src/app
COPY --from=dev /usr/src/app .

EXPOSE 3000

# Need to update CMD because runtime DHI images have no shell or package manager
CMD ["node", "app.js"]
